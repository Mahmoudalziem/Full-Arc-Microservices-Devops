---
- name: Pull Prometheus Github
  git:
    repo: https://github.com/Mahmoudalziem/Full-Arc-Microservices-Devops.git
    dest: prometheus
    version: prometheus
    clone: yes

- name: Get files on remote machine
  find:
    paths: prometheus
    patterns: "*.yaml"
    recurse: yes
  register: prometheus_files

- name: Install Prometheus && Grafana
  k8s:
    src: "{{ item }}"
  loop: "{{ prometheus_files.files|json_query('[].path') }}"

- name: get Grafana Dasboard url
  shell: if [ $(kubectl get services grafana -n monitoring --output jsonpath='{.status.loadBalancer.ingress[0]}') ]; then exit 0; else exit 1; fi;
  register: wait_for_ext_ip
  until: wait_for_ext_ip.rc == 0
  retries: 10
  delay: 5

- name: get Grafana Dasboard url
  command: kubectl get svc grafana -n monitoring --output jsonpath='{.status.loadBalancer.ingress[0].hostname}'
  register: grafana
  when: wait_for_ext_ip.rc == 0
  notify: print-dashboard
