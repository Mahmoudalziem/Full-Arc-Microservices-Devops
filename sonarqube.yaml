apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: sonarqube
  name: sonarqube-sonarqube
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  serviceName: sonarqube-sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - image: sonarqube:lts-community
          name: sonarqube
          ports:
            - containerPort: 9000
              name: http
              protocol: TCP
            - containerPort: 8000
              name: monitoring-web
              protocol: TCP
            - containerPort: 8001
              name: monitoring-ce
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "#!/bin/bash\n# A Sonarqube container is considered ready if the status
                  is UP, DB_MIGRATION_NEEDED or DB_MIGRATION_RUNNING\n# status about migration
                  are added to prevent the node to be kill while sonarqube is upgrading
                  the database.\nhost=\"$(hostname -i || echo '127.0.0.1')\"\nif wget
                  --proxy off -qO- http://${host}:9000/api/system/status | grep -q -e
                  '\"status\":\"UP\"' -e '\"status\":\"DB_MIGRATION_NEEDED\"' -e '\"status\":\"DB_MIGRATION_RUNNING\"';
                  then\n\texit 0\nfi\nexit 1\n"
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube
            - mountPath: /opt/sonarqube/temp
              name: sonarqube
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: sonarqube
            - mountPath: /tmp
              name: tmp-dir
      serviceAccount: default
      volumes:
        - emptyDir: {}
          name: sonarqube
        - emptyDir: {}
          name: tmp-dir
  updateStrategy:
    type: RollingUpdate