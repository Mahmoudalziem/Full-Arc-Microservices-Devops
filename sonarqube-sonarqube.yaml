apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: sonarqube
    app.kubernetes.io/component: sonarqube-sonarqube
    app.kubernetes.io/instance: sonarqube
    app.kubernetes.io/name: sonarqube-sonarqube-sonarqube
    app.kubernetes.io/part-of: sonarqube
  name: sonarqube-sonarqube
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  serviceName: sonarqube-sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - env:
            # - name: SONAR_WEB_JAVAOPTS
            #   value: -javaagent:/opt/sonarqube/data/jmx_prometheus_javaagent.jar=8000:/opt/sonarqube/conf/prometheus-config.yaml
            # - name: SONAR_CE_JAVAOPTS
            #   value: -javaagent:/opt/sonarqube/data/jmx_prometheus_javaagent.jar=8001:/opt/sonarqube/conf/prometheus-ce-config.yaml
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: sonarqube-postgresql
            - name: SONAR_WEB_SYSTEMPASSCODE
              valueFrom:
                secretKeyRef:
                  key: SONAR_WEB_SYSTEMPASSCODE
                  name: sonarqube-postgresql
          image: sonarqube:8.9-community
          livenessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
                - name: X-Sonar-Passcode
                  value: define_it
              path: /api/system/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: sonarqube
          ports:
            - containerPort: 9000
              name: http
              protocol: TCP
            - containerPort: 8000
              name: monitoring-web
              protocol: TCP
            - containerPort: 8001
              name: monitoring-ce
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "#!/bin/bash\n# A Sonarqube container is considered ready if the status
                  is UP, DB_MIGRATION_NEEDED or DB_MIGRATION_RUNNING\n# status about migration
                  are added to prevent the node to be kill while sonarqube is upgrading
                  the database.\nhost=\"$(hostname -i || echo '127.0.0.1')\"\nif wget
                  --proxy off -qO- http://${host}:9000/api/system/status | grep -q -e
                  '\"status\":\"UP\"' -e '\"status\":\"DB_MIGRATION_NEEDED\"' -e '\"status\":\"DB_MIGRATION_RUNNING\"';
                  then\n\texit 0\nfi\nexit 1\n"
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 24
            httpGet:
              path: /api/system/status
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube
              subPath: data
            - mountPath: /opt/sonarqube/temp
              name: sonarqube
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: sonarqube
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /opt/sonarqube/conf/prometheus-config.yaml
              name: prometheus-config
              subPath: prometheus-config.yaml
            - mountPath: /opt/sonarqube/conf/prometheus-ce-config.yaml
              name: prometheus-ce-config
              subPath: prometheus-ce-config.yaml
      restartPolicy: Always
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            name: sonarqube-sonarqube-init-sysctl
          name: init-sysctl
        - configMap:
            name: sonarqube-sonarqube-prometheus-config
          name: prometheus-config
        - configMap:
            name: sonarqube-sonarqube-prometheus-ce-config
          name: prometheus-ce-config
        - emptyDir: {}
          name: sonarqube
        - emptyDir: {}
          name: tmp-dir
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: sonarqube-sonarqube-init-sysctl
  namespace: sonarqube
data:
  init_sysctl.sh: init_sysctl.sh

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: sonarqube-sonarqube-prometheus-config
  namespace: sonarqube
data:
  prometheus-config.yaml: prometheus-config.yaml

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: sonarqube-sonarqube-prometheus-ce-config
  namespace: sonarqube
data:
  prometheus-ce-config.yaml: prometheus-ce-config.yaml
