apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: sonarqube
    app.kubernetes.io/component: sonarqube-sonarqube
    app.kubernetes.io/instance: sonarqube
    app.kubernetes.io/name: sonarqube-sonarqube-sonarqube
    app.kubernetes.io/part-of: sonarqube
    app.kubernetes.io/version: 9.6.0-community
  name: sonarqube-sonarqube
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  serviceName: sonarqube-sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
      - env:
        - name: SONAR_WEB_JAVAOPTS
          value: -javaagent:/opt/sonarqube/data/jmx_prometheus_javaagent.jar=8000:/opt/sonarqube/conf/prometheus-config.yaml
        - name: SONAR_CE_JAVAOPTS
          value: -javaagent:/opt/sonarqube/data/jmx_prometheus_javaagent.jar=8001:/opt/sonarqube/conf/prometheus-ce-config.yaml
        - name: SONAR_JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: sonarqube-postgresql
        - name: SONAR_WEB_SYSTEMPASSCODE
          valueFrom:
            secretKeyRef:
              key: SONAR_WEB_SYSTEMPASSCODE
              name: sonarqube-sonarqube-monitoring-passcode
        envFrom:
        - configMapRef:
            name: sonarqube-sonarqube-jdbc-config
        image: sonarqube:9.6.0-community
        livenessProbe:
          failureThreshold: 6
          httpGet:
            httpHeaders:
            - name: X-Sonar-Passcode
              value: define_it
            path: /api/system/liveness
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: sonarqube
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        - containerPort: 8000
          name: monitoring-web
          protocol: TCP
        - containerPort: 8001
          name: monitoring-ce
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "#!/bin/bash\n# A Sonarqube container is considered ready if the status
              is UP, DB_MIGRATION_NEEDED or DB_MIGRATION_RUNNING\n# status about migration
              are added to prevent the node to be kill while sonarqube is upgrading
              the database.\nhost=\"$(hostname -i || echo '127.0.0.1')\"\nif wget
              --proxy off -qO- http://${host}:9000/api/system/status | grep -q -e
              '\"status\":\"UP\"' -e '\"status\":\"DB_MIGRATION_NEEDED\"' -e '\"status\":\"DB_MIGRATION_RUNNING\"';
              then\n\texit 0\nfi\nexit 1\n"
          failureThreshold: 6
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        securityContext:
          runAsUser: 1000
        startupProbe:
          failureThreshold: 24
          httpGet:
            path: /api/system/status
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /opt/sonarqube/data
          name: sonarqube
          subPath: data
        - mountPath: /opt/sonarqube/temp
          name: sonarqube
          subPath: temp
        - mountPath: /opt/sonarqube/logs
          name: sonarqube
          subPath: logs
        - mountPath: /tmp
          name: tmp-dir
        - mountPath: /opt/sonarqube/conf/prometheus-config.yaml
          name: prometheus-config
          subPath: prometheus-config.yaml
        - mountPath: /opt/sonarqube/conf/prometheus-ce-config.yaml
          name: prometheus-ce-config
          subPath: prometheus-ce-config.yaml
      initContainers:
      - command:
        - /bin/sh
        - -c
        - for i in $(seq 1 200); do nc -z -w3 sonarqube-postgresql 5432 && exit 0
          || sleep 2; done; exit 1
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        name: wait-for-db
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - sh
        - -e
        - /tmp/scripts/init_sysctl.sh
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        name: init-sysctl
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /tmp/scripts/
          name: init-sysctl
      - args:
        - curl -s 'https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.0/jmx_prometheus_javaagent-0.16.0.jar'  --output
          /data/jmx_prometheus_javaagent.jar -v
        command:
        - /bin/sh
        - -c
        env:
        - name: http_proxy
        - name: https_proxy
        - name: no_proxy
        image: curlimages/curl:7.76.1
        name: inject-prometheus-exporter
        resources: {}
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /data
          name: sonarqube
          subPath: data
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: init_sysctl.sh
            path: init_sysctl.sh
          name: sonarqube-sonarqube-init-sysctl
        name: init-sysctl
      - configMap:
          defaultMode: 420
          items:
          - key: init_fs.sh
            path: init_fs.sh
          name: sonarqube-sonarqube-init-fs
        name: init-fs
      - configMap:
          defaultMode: 420
          items:
          - key: install_plugins.sh
            path: install_plugins.sh
          name: sonarqube-sonarqube-install-plugins
        name: install-plugins
      - configMap:
          defaultMode: 420
          items:
          - key: prometheus-config.yaml
            path: prometheus-config.yaml
          name: sonarqube-sonarqube-prometheus-config
        name: prometheus-config
      - configMap:
          defaultMode: 420
          items:
          - key: prometheus-ce-config.yaml
            path: prometheus-ce-config.yaml
          name: sonarqube-sonarqube-prometheus-ce-config
        name: prometheus-ce-config
      - emptyDir: {}
        name: sonarqube
      - emptyDir: {}
        name: tmp-dir
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
